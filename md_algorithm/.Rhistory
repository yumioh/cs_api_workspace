gh_freq <- table(gh_data$발생시간)
gh_data = read.csv("./data/gh_categorize.csv")
setwd("C:/workplace/csi_api_workspace/md_algorithm/")
getwd()
install.packages()
gh_data = read.csv("./data/gh_categorize.csv")
summary(gh_data)
gh_freq <- table(gh_data$발생시간)
gh_freq
kosha_freq <- table(kosha_data$발생시간)
kosha_data = read.csv("./data/kosha_categorize.csv")
kosha_freq <- table(kosha_data$발생시간)
kosha_freq
gh_freq_sorted <- gh_freq[order(as.numeric(names(gh_freq)))]
kosha_freq_sorted <- kosha_freq[order(as.numeric(names(kosha_freq)))]
gh_freq_sorted
all_times <- sort(unique(c(names(gh_freq), names(kosha_freq))))
all_times <- sort(as.numeric(unique(c(names(gh_freq_sorted), names(kosha_freq_sorted)))))
gh_freq_full <- rep(0, length(all_times))
gh_freq_full
bp <- barplot(combined_data,
beside = TRUE,                    # 막대를 나란히 배치
col = c("#F2E64D", "#19396d"),    # 각각의 색상 지정
main = "나이 barplot",
ylim = c(0,5000),
ylab = "빈도",
xlab = "발생시간",
xaxt = "n") #x축 레이블 없애기
combined_data <- rbind(gh_freq_full, kosha_freq_full)
kosha_freq_full <- rep(0, length(all_times))
names(kosha_freq_full) <- all_times
kosha_freq_full[names(kosha_freq)] <- kosha_freq
combined_data <- rbind(gh_freq_full, kosha_freq_full)
combined_data
bp <- barplot(combined_data,
beside = TRUE,                    # 막대를 나란히 배치
col = c("#F2E64D", "#19396d"),    # 각각의 색상 지정
main = "나이 barplot",
ylim = c(0,5000),
ylab = "빈도",
xlab = "발생시간",
xaxt = "n") #x축 레이블 없애기
# 범례 추가
legend("topright",
legend = c("비사고 데이터", "사고데이터"),
fill = c("#F2E64D", "#19396d"),
cex = 0.8)
# 고정된 위치를 위한 계산
n_groups <- length(all_times)   # 실제 그룹의 수
group_width <- 2                # 막대 간격
start_position <- 1             # 시작 위치
positions <- seq(from=start_position, by=group_width, length.out=n_groups)
# 비사고 데이터와 사고 데이터의 발생시간 값 빈도 계산
gh_freq <- table(gh_data$발생시간)
kosha_freq <- table(kosha_data$발생시간)
# gh_freq와 kosha_freq의 이름을 숫자형으로 변환해 정렬
####나이 레이블이 순서가 마지 않아 변경을 위해 작성
gh_freq_sorted <- gh_freq[order(as.numeric(names(gh_freq)))]
kosha_freq_sorted <- kosha_freq[order(as.numeric(names(kosha_freq)))]
# 비사고 데이터와 사고 데이터에서 발생한 고유한 발생시간 값을 중복 없이, 오름차순으로 정렬한 값
# sort : 정렬 unique : 중복된 값 제거
# 발생시간의 모든 범위 확보
all_times <- sort(unique(c(names(gh_freq), names(kosha_freq))))
####나이 레이블이 순서가 마지 않아 변경을 위해 작성
all_times <- sort(as.numeric(unique(c(names(gh_freq_sorted), names(kosha_freq_sorted)))))
# gh_freq와 kosha_freq 모두에 대해 발생시간 범위를 일치시키기 위해 0으로 채워줌
gh_freq_full <- rep(0, length(all_times))
#벡터에 이름 부여
names(gh_freq_full) <- all_times
#실제 빈도의 값 이름에 맞춰서 채우기
gh_freq_full[names(gh_freq)] <- gh_freq
kosha_freq_full <- rep(0, length(all_times))
names(kosha_freq_full) <- all_times
kosha_freq_full[names(kosha_freq)] <- kosha_freq
# 두 데이터를 나란히 결합
combined_data <- rbind(gh_freq_full, kosha_freq_full)
combined_data
# 두 데이터를 나란히 그리기
bp <- barplot(combined_data,
beside = TRUE,                    # 막대를 나란히 배치
col = c("#F2E64D", "#19396d"),    # 각각의 색상 지정
main = "나이 barplot",
ylim = c(0,5000),
ylab = "빈도",
xlab = "발생시간",
xaxt = "n") #x축 레이블 없애기
# 범례 추가
legend("topright",
legend = c("비사고 데이터", "사고데이터"),
fill = c("#F2E64D", "#19396d"),
cex = 0.8)
#1: x축, 2:y축, colMeans : 중앙에 배치
#공사규모
axis(1, at=colMeans(bp), labels=c("200명 이상", "50~200인 미만", "9인~50인 미만", "9인 미만"), cex.axis = 0.8)
# 두 데이터를 나란히 그리기
bp <- barplot(combined_data,
beside = TRUE,                    # 막대를 나란히 배치
col = c("#F2E64D", "#19396d"),    # 각각의 색상 지정
main = "나이 barplot",
ylim = c(0,50000),
ylab = "빈도",
xlab = "발생시간",
xaxt = "n") #x축 레이블 없애기
# 범례 추가
legend("topright",
legend = c("비사고 데이터", "사고데이터"),
fill = c("#F2E64D", "#19396d"),
cex = 0.8)
# 두 데이터를 나란히 결합
combined_data <- rbind(gh_freq_full, kosha_freq_full)
combined_data
# 두 데이터를 나란히 그리기
bp <- barplot(combined_data,
beside = TRUE,                    # 막대를 나란히 배치
col = c("#F2E64D", "#19396d"),    # 각각의 색상 지정
main = "나이 barplot",
ylim = c(0,65000),
ylab = "빈도",
xlab = "발생시간",
xaxt = "n") #x축 레이블 없애기
# 범례 추가
legend("topright",
legend = c("비사고 데이터", "사고데이터"),
fill = c("#F2E64D", "#19396d"),
cex = 0.8)
axis(1, at=colMeans(bp), labels=c("2~4시","20~22시","4~6시","22~24시","0~2시","18~20시","6~8시","16~18시","12~14시","14~16시","8~10시","10~12시"), cex.axis = 0.8)
legend("topright",
legend = c("비사고 데이터", "사고데이터"),
fill = c("#F2E64D", "#19396d"),
cex = 0.5)
legend("topright",
legend = c("비사고 데이터", "사고데이터"),
fill = c("#F2E64D", "#19396d"),
cex = 0.6)
n_groups <- length(all_times)   # 실제 그룹의 수
group_width <- 2                # 막대 간격
start_position <- 1             # 시작 위치
positions <- seq(from=start_position, by=group_width, length.out=n_groups)
# 비사고 데이터와 사고 데이터의 발생시간 값 빈도 계산
gh_freq <- table(gh_data$발생시간)
kosha_freq <- table(kosha_data$발생시간)
# gh_freq와 kosha_freq의 이름을 숫자형으로 변환해 정렬
####나이 레이블이 순서가 마지 않아 변경을 위해 작성
gh_freq_sorted <- gh_freq[order(as.numeric(names(gh_freq)))]
kosha_freq_sorted <- kosha_freq[order(as.numeric(names(kosha_freq)))]
# 비사고 데이터와 사고 데이터에서 발생한 고유한 발생시간 값을 중복 없이, 오름차순으로 정렬한 값
# sort : 정렬 unique : 중복된 값 제거
# 발생시간의 모든 범위 확보
all_times <- sort(unique(c(names(gh_freq), names(kosha_freq))))
####나이 레이블이 순서가 마지 않아 변경을 위해 작성
all_times <- sort(as.numeric(unique(c(names(gh_freq_sorted), names(kosha_freq_sorted)))))
# gh_freq와 kosha_freq 모두에 대해 발생시간 범위를 일치시키기 위해 0으로 채워줌
gh_freq_full <- rep(0, length(all_times))
#벡터에 이름 부여
names(gh_freq_full) <- all_times
#실제 빈도의 값 이름에 맞춰서 채우기
gh_freq_full[names(gh_freq)] <- gh_freq
kosha_freq_full <- rep(0, length(all_times))
names(kosha_freq_full) <- all_times
kosha_freq_full[names(kosha_freq)] <- kosha_freq
# 두 데이터를 나란히 결합
combined_data <- rbind(gh_freq_full, kosha_freq_full)
# 두 데이터를 나란히 그리기
bp <- barplot(combined_data,
beside = TRUE,                    # 막대를 나란히 배치
col = c("#F2E64D", "#19396d"),    # 각각의 색상 지정
main = "나이 barplot",
ylim = c(0,65000),
ylab = "빈도",
xlab = "발생시간",
xaxt = "n") #x축 레이블 없애기
# 범례 추가
legend("topright",
legend = c("비사고 데이터", "사고데이터"),
fill = c("#F2E64D", "#19396d"),
cex = 0.6)
axis(1, at=colMeans(bp), labels=c("2~4시","20~22시","4~6시","22~24시","0~2시","18~20시","6~8시","16~18시","12~14시","14~16시","8~10시","10~12시"), cex.axis = 0.8)
source("C:/workplace/csi_api_workspace/md_algorithm/r_visualization/visualization_boxplot.R", echo=TRUE)
# 두 데이터를 나란히 그리기
bp <- barplot(combined_data,
beside = TRUE,                    # 막대를 나란히 배치
col = c("#F2E64D", "#19396d"),    # 각각의 색상 지정
main = "발생시간 barplot",
ylim = c(0,65000),
ylab = "빈도",
xlab = "발생시간",
xaxt = "n") #x축 레이블 없애기
# 범례 추가
legend("topright",
legend = c("비사고 데이터", "사고데이터"),
fill = c("#F2E64D", "#19396d"),
cex = 0.6)
axis(1, at=colMeans(bp), labels=c("2~4시","20~22시","4~6시","22~24시","0~2시","18~20시","6~8시","16~18시","12~14시","14~16시","8~10시","10~12시"), cex.axis = 0.8)
axis(1, at=colMeans(bp), labels=c("2~4시","20~22시","4~6시","22~24시","0~2시","18~20시","6~8시","16~18시","12~14시","14~16시","8~10시","10~12시"), cex.axis = 0.6)
# 두 데이터를 나란히 그리기
bp <- barplot(combined_data,
beside = TRUE,                    # 막대를 나란히 배치
col = c("#F2E64D", "#19396d"),    # 각각의 색상 지정
main = "발생시간 barplot",
ylim = c(0,65000),
ylab = "빈도",
xlab = "발생시간",
xaxt = "n") #x축 레이블 없애기
# 범례 추가
legend("topright",
legend = c("비사고 데이터", "사고데이터"),
fill = c("#F2E64D", "#19396d"),
cex = 0.6)
axis(1, at=colMeans(bp), labels=c("2~4시","20~22시","4~6시","22~24시","0~2시","18~20시","6~8시","16~18시","12~14시","14~16시","8~10시","10~12시"), cex.axis = 0.6)
